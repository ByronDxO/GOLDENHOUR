<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Estilo para TextBox -->
	<Style x:Key="formTextBox" TargetType="TextBox">
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
		<Setter Property="FontFamily" Value="Montserrat"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource panelActiveColor}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border x:Name="border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4"
                  SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost"
                          Margin="{TemplateBinding Padding}"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalScrollBarVisibility="Hidden"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource panelOverColor}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource panelActiveColor}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="LightGray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Estilo para Label -->
	<Style x:Key="formLabel" TargetType="Label">
		<Setter Property="FontFamily" Value="Montserrat"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
		<Setter Property="Margin" Value="5"/>
	</Style>

	<!-- Estilo para ComboBox -->
	<Style x:Key="formComboBox" TargetType="ComboBox">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="BorderBrush" Value="{StaticResource panelActiveColor}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="FontFamily" Value="Montserrat"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<!-- Botón para abrir el drop-down -->
						<ToggleButton x:Name="ToggleButton"
                        Focusable="False"
                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press"
                        Background="Transparent"
                        BorderThickness="0"
                        HorizontalAlignment="Right">
							<Path Fill="{TemplateBinding Foreground}" Data="M 0 0 L 4 4 L 8 0 Z" 
                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</ToggleButton>
						<!-- Área que muestra el elemento seleccionado -->
						<ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
						<!-- Popup que contendrá la lista de elementos -->
						<Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
							<Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder"
                      BorderThickness="1"
                      BorderBrush="{StaticResource panelActiveColor}"
                      Background="White"/>
								<ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained"/>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>




	<!-- Aquí puedes agregar más estilos para otros controles de formulario, como CheckBox, RadioButton, etc. -->
</ResourceDictionary>
